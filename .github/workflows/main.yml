name: Setup ngrok and Remote Desktop

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  setup-ngrok:
    runs-on: self-hosted  # Aapka self-hosted runner
    timeout-minutes: 720  # Max allowed: 6 hours

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure system resources
        run: |
          Write-Host "üñ•Ô∏è Setting up system with 16GB RAM and 4 cores..."
          # Yahan note karein: GitHub Actions par resources ko manually limit karna possible nahi hota,
          # par aap apne self-hosted runner par ye ensure kar sakte hain:
          #   - System me 16GB RAM aur 4 CPU cores assign hon
          #   - Virtual machine ya Docker container ke resources control karein

      - name: Download ngrok (with retry)
        run: |
          $retry = 3
          while ($retry -gt 0) {
            try {
              Invoke-WebRequest -Uri "https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip" -OutFile "ngrok.zip"
              Expand-Archive ngrok.zip
              break
            } catch {
              Write-Host "Download failed, retrying..."
              Start-Sleep -Seconds 5
              $retry--
            }
          }

      - name: Setup ngrok auth
        run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN

      - name: Start RDP
        run: |
          net user runneradmin /add
          net localgroup administrators runneradmin /add
          net user runneradmin 12345
          reg add "HKLM\System\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Start-Process -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp 3389"
          Write-Host "‚úÖ RDP setup complete. Use ngrok URL to connect."
